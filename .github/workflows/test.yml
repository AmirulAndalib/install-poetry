name: tests

on: push

jobs:
#  test-matrix:
#    strategy:
#      fail-fast: true
#      matrix:
#        os: [ubuntu-latest, macos-latest]
#        python-version: [3.9]  # 3.7, 3.8,
#        poetry-version: [1.0.0, 1.1.4]
#    runs-on: ${{ matrix.os }}
#    steps:
#      - uses: actions/checkout@v2
#      - name: Setup Poetry
#        uses: ./
#        with:
#          version: ${{ matrix.poetry-version }}
#      - name: Setup Python
#        uses: actions/setup-python@v2
#        with:
#          python-version: ${{ matrix.python-version }}
#      - name: Test poetry install
#        run: poetry install
#  test-create-venv-false:
#    strategy:
#      fail-fast: true
#      matrix:
#        os: [ubuntu-latest, macos-latest]
#    runs-on: ${{ matrix.os }}
#    steps:
#      - uses: actions/checkout@v2
#      - name: Setup Poetry
#        uses: ./
#        with:
#          version: $(cat requirements.txt | sed 's/poetry==//g')
#          virtualenvs-create: false
#      - uses: actions/setup-python@v2
#        with:
#          python-version: 3.9
#      - name: Test no venv is created
#        run: |
#          output=$(poetry install)
#          echo $output
#          source "./assert.sh"
#          assert_in "Skipping virtualenv creation, as specified in config file." "$output"
  test-create-venv-in-project:
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup Poetry
        uses: ./
        with:
          version: $(cat requirements.txt | sed 's/poetry==//g')
          virtualenvs-create: true
          virtualenvs-in-project: true
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Test venv in project
        run: |
          output=$(poetry install)
          echo $output
          source "./assert.sh"
          assert_in "/install-poetry/install-poetry/.venv" "$output"
  test-create-venv-outside-project:
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup Poetry
        uses: ./
        with:
          version: $(cat requirements.txt | sed 's/poetry==//g')
          virtualenvs-create: true
          virtualenvs-in-project: false
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Test venv outside project
        run: |
          output=$(poetry install)
          echo $output
          source "./assert.sh"
          assert_in " in .venv" "$output"
  test-experimental-new-installer-off:
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup Poetry
        uses: ./
        with:
          version: 1.1.4
          virtualenvs-create: true
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Test venv outside project
        run: |
          output=$(poetry config --list)
          assert_in "experimental.new-installer = false" "$output"